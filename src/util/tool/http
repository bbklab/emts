#!/usr/bin/env bash

show_help(){
cat <<EOF
Arguments:    {addr_port}
Usage:   "http:127.0.0.1:80  https:mail.eyou.net:443"

Output:   
{addr}:{port} succ
{addr}:{port} warn http_code

Example:
127.0.0.1:80 succ
mail.eyou.net:443 warn 404
EOF
exit 0;
}
[ "$1" == "help" -o "$1" == "h" ] && show_help;

addr_port="$1"
time_out=5

check(){
  if [ -f "/usr/bin/curl" ] && [ -x "/usr/bin/curl" ]; then
	:
  else
        return
  fi

  if [ -z "${addr_port}" ]; then
        return
  fi

  for x in `echo "${addr_port}"`;
  do
	prot=$(echo "${x}" | awk -F: '{print $1}')
	addr=$(echo "${x}" | awk -F: '{print $2}')
	port=$(echo "${x}" | awk -F: '{print $3}')

	if [ -z "${addr}" ]; then
		continue
	fi

	if [ "${prot}" == "https" ]; then
		code=$(/usr/bin/curl -k \
				--location --max-redirs 3 \
				--max-time ${time_out} -s -o /dev/null \
				-w "%{http_code}" \
				"${prot}://${addr}:${port}" 2>/dev/null)
	elif [ "${prot}" == "http" ]; then
		code=$(/usr/bin/curl \
				--location --max-redirs 3 \
				--max-time ${time_out} -s -o /dev/null \
				-w "%{http_code}" \
				"${prot}://${addr}:${port}" 2>/dev/null)
	else
		continue
	fi

	if [ "$code" == "200" ]; then
		echo "${addr}:${port} succ"
	else
		echo "${addr}:${port} warn response http code: ${code}"
	fi
  done
}

check
